import Layout from "../../layouts/layout.astro";
import directus from "../../lib/directus";
import { readItems } from "@directus/sdk";
import { getImageUrl } from "../../lib/cloudinary";

const photoshoots = await directus.request(
  readItems("kepka_shoots", {
    fields: [
      "slug",
      "title",
      "date_created",
      "images.directus_files_id",
      "kepka_shoots_files.directus_files_id"
    ],
    sort: ["-date_created"],
  })
);

// Helper to safely extract the first image ID
const getFirstImageId = (photoshoot) => {
  if (!photoshoot || (!photoshoot.images && !photoshoot.kepka_shoots_files)) return null;
  
  try {
    // Check different possible structures
    if (photoshoot.images) {
      if (Array.isArray(photoshoot.images) && photoshoot.images.length > 0) {
        if (typeof photoshoot.images[0] === 'object' && photoshoot.images[0]?.directus_files_id) {
          return photoshoot.images[0].directus_files_id;
        } else {
          return photoshoot.images[0];
        }
      } else if (typeof photoshoot.images === 'string') {
        return photoshoot.images;
      }
    }
    
    // Check join table
    if (photoshoot.kepka_shoots_files && 
        Array.isArray(photoshoot.kepka_shoots_files) && 
        photoshoot.kepka_shoots_files.length > 0 &&
        photoshoot.kepka_shoots_files[0]?.directus_files_id) {
      return photoshoot.kepka_shoots_files[0].directus_files_id;
    }
    
    return null;
  } catch (error) {
    console.error('Error extracting image ID:', error);
    return null;
  }
};

<Layout title="Photoshoots">
  <main>
    <h1>Photoshoots</h1>
    <ul class="photoshoots-grid">
      {
        photoshoots.map((photoshoot) => {
          const imageId = getFirstImageId(photoshoot);
          return (
            <li class="photoshoot-card">
              <a href={`/photoshoots/${photoshoot.slug}`}>
                {imageId ? (
                  <img 
                    src={getImageUrl(imageId, { width: 500, height: 700 })} 
                    alt={photoshoot.title}
                    class="photoshoot-thumbnail"
                    onerror="this.onerror=null; this.src=this.getAttribute('data-fallback');"
                    data-fallback={getImageUrl(imageId, {}, false)}
                  />
                ) : (
                  <div class="no-image">No image available</div>
                )}
                <h2>{photoshoot.title}</h2>
              </a>
              <span class="photoshoot-date">
                {new Date(photoshoot.date_created).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long'
                })}
              </span>
            </li>
          )
        })
      }
    </ul>
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }
  
  .photoshoots-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    list-style: none;
    padding: 0;
  }
  
  .photoshoot-card {
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .photoshoot-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .photoshoot-thumbnail {
    width: 100%;
    aspect-ratio: 3/4;
    object-fit: cover;
  }
  
  .no-image {
    width: 100%;
    aspect-ratio: 3/4;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #999;
  }
  
  .photoshoot-date {
    color: #666;
    font-size: 0.9rem;
  }
</style> 