---
import MainLayout from "../../layouts/MainLayout.astro";
import { getAssetUrl } from "../../lib/directus";
import { CloudinaryImage } from "../../components/ui/CloudinaryImage";
import directus from "../../lib/directus";
import { readItems } from "@directus/sdk";

// Fetch all artworks
const artworks = await directus.request(
  readItems('kepka_artworks', {
    fields: ['*'],
    sort: ['-date_created'],
    limit: 100,
  })
);

// Page title
const pageTitle = "Artworks | Jakub Kepka";

// Format function for dates with proper type
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long'
  });
};

// Assign sizes to artworks in an interesting pattern
// This creates a more dynamic, asymmetric layout
const getSizeClass = (index: number) => {
  const pattern = index % 8;
  
  switch (pattern) {
    // Most items are 1 column, with occasional 2-column items
    case 0: return "col-span-1"; // Standard
    case 3: return "col-span-2"; // Wide
    case 6: return "col-span-2"; // Wide
    default: return "col-span-1"; // Standard
  }
};
---

<MainLayout title={pageTitle}>
  <main class="bg-white dark:bg-black py-24">
    <!-- Museum-like header with ample whitespace -->
    <div class="container max-w-5xl mx-auto px-6 lg:px-8 mb-32">
      <h1 class="text-5xl md:text-6xl font-display font-bold tracking-tighter">
        ARTWORKS
      </h1>
      <div class="w-16 h-0.5 bg-electric-red mt-8 mb-12"></div>
      <p class="text-lg text-muted-foreground max-w-xl">
        Explore the collection of Jakub Kepka's artworks. Each piece represents a unique expression of form, color, and emotion.
      </p>
    </div>

    <!-- Museum wall-style gallery -->
    {artworks.length === 0 ? (
      <div class="container max-w-5xl mx-auto px-6 lg:px-8 text-center py-16">
        <p class="text-xl text-muted-foreground">No artworks available at the moment.</p>
      </div>
    ) : (
      <div class="container max-w-5xl mx-auto px-6 lg:px-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-x-16 gap-y-40">
          {artworks.map((artwork) => {
            const thumbnailImage = artwork.cover || null;
            
            return (
              <div class="group artwork-item">
                <a 
                  href={`/artworks/${artwork.slug}`} 
                  class="block"
                >
                  <figure class="mb-6 overflow-hidden">
                    {thumbnailImage ? (
                      <CloudinaryImage
                        publicId={getAssetUrl(thumbnailImage)}
                        alt={artwork.title}
                        className="w-full aspect-square object-cover transition-all duration-700 group-hover:scale-102"
                        grayscale={false}
                        crop="fill"
                        gravity="auto"
                        fallback={getAssetUrl(thumbnailImage)}
                        client:load
                      />
                    ) : (
                      <div class="w-full aspect-square bg-muted flex items-center justify-center">
                        <span class="text-muted-foreground">No image</span>
                      </div>
                    )}
                  </figure>
                  
                  <figcaption class="px-1">
                    <h2 class="text-base font-medium tracking-tight mb-1 group-hover:text-electric-red transition-colors">
                      {artwork.title}
                    </h2>
                    
                    <time class="text-xs text-muted-foreground block" datetime={artwork.date_created}>
                      {formatDate(artwork.date_created)}
                    </time>
                  </figcaption>
                </a>
              </div>
            );
          })}
        </div>
      </div>
    )}
    
    <!-- Additional whitespace at bottom -->
    <div class="h-32"></div>
  </main>
</MainLayout>

<style>
  /* Museum-like styling */
  .artwork-item {
    position: relative;
  }
  
  .artwork-item figure {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
  }
  
  .artwork-item:hover figure {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
  }
  
  /* More breathing space on large screens */
  @media (min-width: 1280px) {
    .grid {
      gap-y: 60px;
      gap-x: 80px;
    }
  }
</style>
